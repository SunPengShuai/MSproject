version: '3'
services:
  master:
    environment:
      ## root账号的密码
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
      ## 新建mysql账号
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: user
      MYSQL_DATABASE: 'mysql_db'
    image: "docker.io/mysql:latest"
    container_name: mysql-master
    restart: always
    ## 映射挂载
    volumes:
      ## 数据目录，要确保先创建好
      - "./master/data:/var/lib/mysql"
      - "./master/config/my.cnf:/etc/mysql/my.cnf"
      - "./master/mysql-files:/var/lib/mysql-files"
    ports:
      - "3306:3306"
    command:
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-authentication-plugin=mysql_native_password
    networks:
      basenetwork:
        ipv4_address: 192.168.100.5
  slave:
    environment:
      ## root账号的密码
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
      ## 新建mysql账号
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: user
      MYSQL_DATABASE: 'mysql_db'
    image: "docker.io/mysql:latest"
    container_name: mysql-slave
    restart: always
    ## 映射挂载
    volumes:
      ## 数据目录，要确保先创建好
      - "./slave/data:/var/lib/mysql"
      - "./slave/config/my.cnf:/etc/mysql/my.cnf"
      - "./slave/mysql-files:/var/lib/mysql-files"
    ports:
      - "3307:3306"
    command:
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-authentication-plugin=mysql_native_password
    networks:
      basenetwork:
        ipv4_address: 192.168.100.6

networks:
  basenetwork:
    ipam:
      config:
        - subnet: 192.168.100.0/24

